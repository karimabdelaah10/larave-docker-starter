version: '3.5'

services:
  app:
    env_file: .env
    build:
      dockerfile: .docker/Dockerfile
      context: .
    volumes:
      - ./core:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php-overrides.ini
    environment:
      - CHOKIDAR_USEPOLLING=true
    working_dir: /var/www
    container_name: ${APP_CONTAINER_NAME}
    depends_on:
      - mysql
      - redis
    networks:
      - ${NETWORK_NAME}

  nginx:
    image: nginx:alpine
    container_name: ${MAIN_NGINX_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - ${MAIN_NGINX_PORT}:80
    volumes:
      - ./core:/var/www
      - .docker/nginx:/etc/nginx/conf.d
    networks:
      - ${NETWORK_NAME}
  mysql:
    env_file: .env
    image: mysql:5.7
    restart: unless-stopped
    container_name: ${MAIN_DB_CONTAINER_NAME}
    ports:
      - "${MAIN_DB_PORT}:3306"
    volumes:
      - "./.docker-data/dbdata:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: ${MAIN_DB_NAME}
      MYSQL_USER: ${MAIN_DB_USER}
      MYSQL_PASSWORD: ${MAIN_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MAIN_DB_PASSWORD}
    networks:
      - ${NETWORK_NAME}
  redis:
    image: redis:alpine
    container_name: ${REDIS_CONTAINER_NAME}
    command: redis-server --appendonly yes
    volumes:
      - ./.docker-data/redis:/data
    ports:
      - "${REDIS_CONTAINER_PORT}:6379"
    networks:
      - ${NETWORK_NAME}
    healthcheck:
      test: redis-cli -h redis -p 6379 ping
      start_period: 3s
      interval: 2s
      timeout: 2s
      retries: 10


networks:
  starter-network:
    name: ${NETWORK_NAME}
    external: true
    driver: bridge
